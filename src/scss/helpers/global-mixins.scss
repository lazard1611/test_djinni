@use 'sass:math';

@function z-index($key) {
	@return map-get($z-index, $key);
}

@mixin z-index($key) {
	z-index: z-index($key);
}

@function math($val_1, $val_2) {
	@return math.div($val_1, $val_2);
}

@mixin d3() {
	will-change: transform;
	transform: translateZ(0);
}

@mixin appearance($value: button) {
	-moz-appearance: $value;
	-webkit-appearance: $value;
	appearance: $value;
}

@mixin bp($width, $value: max) {
	@if $value == min {
		@media screen and (min-width: $width) {
			@content;
		}
	} @else if $value == max {
		@media screen and (max-width: $width) {
			@content;
		}
	} @else {
		@media (max-width: $width) and (min-width: $value) {
			@content;
		}
	}
}

@mixin flex_block(
	$flex-direction: row,
	$flex-wrap: wrap,
	$content: space-between,
	$align-items: flex-start,
	$align-content: flex-start
) {
	display: flex;
	flex-direction: $flex-direction;
	flex-wrap: $flex-wrap;
	justify-content: $content;
	align-content: $align-content;
	align-items: $align-items;
}

@mixin font_face(
	$file_name,
	$font_name: $file_name,
	$path: $font_path,
	$weight: normal,
	$style: normal
) {
	@font-face {
		font-family: quote($font_name);
		src: url($path + $file-name + '.woff2') format('woff2'),
			url($path + $file-name + '.woff') format('woff');
		font-weight: $weight;
		font-style: $style;
		font-display: swap;
	}
}
